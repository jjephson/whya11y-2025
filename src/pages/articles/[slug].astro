---
import BlogLayout from '../../layouts/BlogLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
	const articles = await getCollection('articles');
	return articles.map(article => ({
		params: { slug: article.slug },
		props: { article },
	}));
}

const { article } = Astro.props;
const { Content } = await article.render();

// Header image logic
const headerImage = article.data.headerImage || `https://source.unsplash.com/random/1200x320?sig=${Math.floor(Math.random()*1000)}`;
---

<BlogLayout title={article.data.title}>
	<article class="article-content">
		{headerImage && (
			<div class="article-header">
				<img src={headerImage} alt="" class="article-header-image" />
			</div>
		)}
		<div class="article-body">
			<header class="article-header-content">
				<h1>{article.data.title}</h1>
				<div class="article-meta">
					<time datetime={article.data.date}>{new Date(article.data.date).toLocaleDateString()}</time>
				</div>
				<p class="article-description">{article.data.description}</p>
			</header>
			<div class="article-text" id="article-text">
				<Content />
			</div>
		</div>
	</article>
</BlogLayout>

<style>
	.article-content {
		max-width: 800px;
		margin: 0 auto;
	}
	.article-header {
		margin: -2rem -2rem 2rem;
		overflow: hidden;
		border-radius: .75rem;
	}
	.article-header-image {
		width: 100%;
		height: 300px;
		object-fit: cover;
		display: block;
	}
	.article-body {
		padding: 0 1rem;
	}
	.article-header-content {
		margin-bottom: 3rem;
		padding-bottom: 2rem;
		border-bottom: 1px solid var(--border);
	}
	.article-header-content h1 {
		font-size: 2.5rem;
		line-height: 1.2;
		margin: 0 0 1rem;
		color: var(--fg);
	}
	.article-meta {
		margin-bottom: 1.5rem;
	}
	.article-meta time {
		font-size: .9rem;
		color: var(--fg-muted);
		font-weight: 500;
		text-transform: uppercase;
		letter-spacing: .05em;
	}
	.article-description {
		font-size: 1.25rem;
		line-height: 1.6;
		color: var(--fg-muted);
		margin: 0;
		font-weight: 400;
	}
	.article-text {
		font-size: 1.1rem;
		line-height: 1.7;
		color: var(--fg);
	}
	.article-text h2 {
		font-size: 1.8rem;
		margin: 2.5rem 0 1rem;
		color: var(--fg);
	}
	.article-text h3 {
		font-size: 1.4rem;
		margin: 2rem 0 0.75rem 0;
		color: var(--fg);
	}
	.article-text h4 {
		font-size: 1.2rem;
		margin: 1.5rem 0 0.5rem;
		color: var(--fg);
	}
	.article-text p {
		margin: 0 0 1.5rem;
	}
	.article-text ul,
	.article-text ol {
		margin: 1.5rem 0;
		padding-left: 1.5rem;
	}
	.article-text li {
		margin: .5rem 0;
	}
	.article-text blockquote {
		margin: 2rem 0;
		padding: 1.5rem;
		border-left: 4px solid var(--fg);
		background: var(--bg-muted);
		border-radius: 0 .5rem .5rem 0;
		font-style: italic;
	}
	.article-text code {
		background: var(--bg-muted);
		padding: .2rem .4rem;
		border-radius: .25rem;
		font-size: .9em;
		font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
	}
	.article-text pre {
		background: var(--bg-muted);
		padding: 1.5rem;
		border-radius: .5rem;
		overflow-x: auto;
		margin: 2rem 0;
		border: 1px solid var(--border);
	}
	.article-text pre code {
		background: none;
		padding: 0;
		font-size: .9rem;
		line-height: 1.5;
	}
	.article-text img {
		max-width: 100%;
		height: auto;
		border-radius: .5rem;
		margin: 2rem 0;
	}
	.article-text a {
		color: var(--link);
		text-decoration: underline;
		text-decoration-color: var(--link-underline);
		text-underline-offset: 0.2em;
		text-decoration-thickness: 2px;
	}
	.article-text a:hover {
		color: var(--link-hover);
		text-decoration-color: var(--link-underline-hover);
		text-decoration-thickness: 3px;
	}
	@media (max-width: 768px) {
		.article-header {
			margin: -1rem -1rem 1.5rem;
		}
		.article-header-image {
			height: 200px;
		}
		.article-body {
			padding: 0 .5rem;
		}
		.article-header-content h1 {
			font-size: 2rem;
		}
		.article-description {
			font-size: 1.1rem;
		}
		.article-text {
			font-size: 1rem;
		}
		.article-text h2 {
			font-size: 1.5rem;
		}
		.article-text h3 {
			font-size: 1.3rem;
		}
	}
</style> 